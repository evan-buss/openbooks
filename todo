WEB UI
- Make sure we delete the files in the temp directory after sending them
  - Might save the search results file and allow users to select a previous search

- Clean up and review core go code. I am sure there are some things that can be simplified and refactored.

- Rewrite / refactor dcc parsing. Current implementation is messy and doesn't use builtin path utilities

- Write some tests for things simple things like utilities

- Look into go logging. Learn how to change the logger output before release.

- Disable download buttons until the download is completed. Users should be able to overload the server with requests.

- Look into mutex locking on the reader and the ws connection. Not sure if this is the cause of errors/bugs


REACH:
- Improve parsing accuracy with "per-server" parsing functions
   - Each one adapted to the common format for that server
   - Would require studying the format of the server with multiple search files..
   - Something to do in the future

FEATURES
 - Store references to recently downloaded search results. Users should be able to click any of them and populate the table again
 - Show the currently active file servers in the sidebar
   - Indicate in the table which servers are online and which aren't
     - If the server is not online either indicate to the user when they choose to download or just hide them in the table.
   - Not sure if I want to do the checking server side or client side. The server would filter the results based on the active servers.